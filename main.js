/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var g=Object.defineProperty;var D=Object.getOwnPropertyDescriptor;var R=Object.getOwnPropertyNames;var k=Object.prototype.hasOwnProperty;var A=(i,n)=>{for(var t in n)g(i,t,{get:n[t],enumerable:!0})},F=(i,n,t,e)=>{if(n&&typeof n=="object"||typeof n=="function")for(let s of R(n))!k.call(i,s)&&s!==t&&g(i,s,{get:()=>n[s],enumerable:!(e=D(n,s))||e.enumerable});return i};var I=i=>F(g({},"__esModule",{value:!0}),i);var $={};A($,{default:()=>h});module.exports=I($);var a=require("obsidian"),T={apiKey:"fb7db6ae-be74-4399-99db-c8d1d9228cc7",searchResultsFolder:"Exa Search Results",rootFolder:"Exa"},h=class extends a.Plugin{async onload(){await this.loadSettings(),this.addCommand({id:"exa-search",name:"Search with Exa",callback:()=>{new y(this.app,this).open()}}),this.addSettingTab(new E(this.app,this))}async loadSettings(){this.settings=Object.assign({},T,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async searchExa(t,e,s,r=10){try{let o=await(0,a.request)({url:"https://api.exa.ai/search",method:"POST",headers:{Accept:"application/json","Content-Type":"application/json","x-api-key":this.settings.apiKey},body:JSON.stringify({query:t,type:"keyword",numResults:r,contents:{text:!0},start_published_date:e,end_published_date:s})});return JSON.parse(o)}catch(o){throw console.error("Error searching Exa:",o),new Error("Failed to fetch from Exa API: "+o.message)}}async saveResultAsMarkdown(t,e){let s=this.settings.rootFolder;await this.app.vault.adapter.exists(s)||await this.app.vault.createFolder(s);let r=`${s}/${e}`;await this.app.vault.adapter.exists(r)||await this.app.vault.createFolder(r);let o=t.title.replace(/[\\/:*?"<>|]/g,"_"),c=`${r}/${o}.md`,x=`---
url: ${t.url}
date: ${t.publishedDate}
author: ${t.author}
image: ${t.image}
---

# ${t.title}

${t.text}`;await this.app.vault.create(c,x)}},y=class extends a.Modal{constructor(t,e){super(t);this.plugin=e}onOpen(){let{contentEl:t}=this;t.empty(),t.createEl("h2",{text:"Enter search keyword"});let e=t.createEl("input",{type:"text",placeholder:"Enter your search query"});e.style.width="100%",e.style.marginBottom="10px";let s=!1;e.addEventListener("compositionstart",()=>{s=!0}),e.addEventListener("compositionend",()=>{s=!1});let r=t.createEl("div");r.style.marginBottom="10px";let o=r.createEl("label",{text:"Start Date: "}),c=r.createEl("input",{type:"date"});c.style.marginRight="10px";let x=r.createEl("label",{text:"End Date: "}),m=r.createEl("input",{type:"date"}),d=t.createEl("div");d.style.marginBottom="10px",d.style.marginTop="10px";let N=d.createEl("label",{text:"Number of Results: "}),p=d.createEl("input",{type:"number",value:"10"});p.style.width="60px",p.setAttribute("min","1"),p.setAttribute("max","100");let w=t.createEl("button",{text:"Search"});w.style.width="100%";let S=async u=>{if(!u.trim()){new a.Notice("Please enter a search query");return}let f=c.value?new Date(c.value).toISOString():void 0,v=m.value?new Date(m.value).toISOString():void 0,b=parseInt(p.value)||10;this.close(),new a.Notice("Searching...");try{let l=await this.plugin.searchExa(u,f,v,b);if(!l.results||l.results.length===0){new a.Notice("No results found");return}for(let P of l.results)await this.plugin.saveResultAsMarkdown(P,u);new a.Notice(`Successfully saved ${l.results.length} results`)}catch(l){console.error("Search error:",l),new a.Notice("Error searching: "+l.message)}};e.addEventListener("keydown",async u=>{u.key==="Enter"&&!s&&await S(e.value)}),w.addEventListener("click",async()=>{await S(e.value)}),e.focus()}onClose(){let{contentEl:t}=this;t.empty()}},E=class extends a.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e}display(){let{containerEl:t}=this;t.empty(),new a.Setting(t).setName("API Key").setDesc("Enter your Exa API key").addText(e=>e.setPlaceholder("Enter your API key").setValue(this.plugin.settings.apiKey).onChange(async s=>{this.plugin.settings.apiKey=s,await this.plugin.saveSettings()})),new a.Setting(t).setName("Root Folder").setDesc("Root folder for saving search results").addText(e=>e.setPlaceholder("Enter root folder path").setValue(this.plugin.settings.rootFolder).onChange(async s=>{this.plugin.settings.rootFolder=s,await this.plugin.saveSettings()}))}};
